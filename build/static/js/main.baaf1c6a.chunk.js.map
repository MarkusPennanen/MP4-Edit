{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ffmpeg","createFFmpeg","log","App","useState","ready","setReady","video","setVideo","gif","setGif","mp3","setMp3","mp4","setMp4","site","setSite","loading","setLoading","start","setStart","end","setEnd","videoSpeed","setVideoSpeed","audioSpeed","setAudioSpeed","load","a","useEffect","convertToGif","fetchFile","FS","run","data","url","URL","createObjectURL","Blob","buffer","type","alert","convertToMp3","convertToMp4","className","id","to","onClick","e","for","class","onChange","target","files","item","controls","width","src","value","path","exact","alt","href","download","text","color","height","timeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baaf1c6a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst ffmpeg = createFFmpeg({ log: true });\n\n\nfunction App() {\n  const [ready, setReady] = useState(false);\n  const [video, setVideo] = useState();\n  const [gif, setGif] = useState();\n  const [mp3, setMp3] = useState();\n  const [mp4, setMp4] = useState();\n  const [site, setSite] = useState();\n  const [loading, setLoading] = useState(false);\n  const [start, setStart] = useState([0]);\n  const [end, setEnd] = useState([9999]);\n  const [videoSpeed, setVideoSpeed] = useState([1]);\n  const [audioSpeed, setAudioSpeed] = useState([1]);\n\n  const load = async () => {\n    await ffmpeg.load();\n    setReady(true);\n  }\n\n  useEffect(() => {\n    load();\n    setSite(\"MP4 to GIF\")\n  }, [])\n\n  const convertToGif = async () => {\n    try {\n    ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(video));\n    setLoading(true);\n    await ffmpeg.run('-i', 'test.mp4', '-t', `${end}`, '-ss', `${start}`, '-f', 'gif', 'out.gif');\n\n    const data = ffmpeg.FS('readFile', 'out.gif');\n\n    const url = URL.createObjectURL(new Blob([data.buffer], { type: 'image/gif' }));\n\n    setGif(url)\n    setLoading(false);\n    } catch(err) {alert(\"Currently processing a file\")}\n  }\n\n  const convertToMp3 = async () => {\n    try {\n    ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(video));\n    setLoading(true);\n    await ffmpeg.run('-i', 'test.mp4', '-t', `${end}`, '-ss', `${start}`, '-f', 'mp3', 'out.mp3');\n\n    const data = ffmpeg.FS('readFile', 'out.mp3');\n\n    const url = URL.createObjectURL(new Blob([data.buffer], { type: 'audio/mp3' }));\n\n    setMp3(url)\n    setLoading(false);\n  } catch(err) {alert(\"Currently processing a file\")}\n  }\n\n  const convertToMp4 = async () => {\n    try {\n    ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(video));\n    setLoading(true);\n\n    await ffmpeg.run('-i', 'test.mp4', '-t', `${end}`, '-ss', `${start}`, '-filter_complex',\n     '[0:v]setpts='+`${videoSpeed}`+'*PTS[v];[0:a]atempo='+`${audioSpeed}`+'[a]', '-map', '[v]', '-map', '[a]', 'out.mp4');\n\n    const data = ffmpeg.FS('readFile', 'out.mp4');\n\n    const url = URL.createObjectURL(new Blob([data.buffer], { type: 'video/mp4' }));\n\n    setMp4(url)\n\n    setLoading(false);\n\n  } catch(err) {alert(\"Currently processing a file\")}\n  }\n\n\n  return ready ? (\n\n  <div className=\"App\">\n    <Router>\n\n    <div id=\"navbar-1\">\n      <Link className=\"nav-item\" to=\"/\" onClick={(e) => setSite(\"MP4 to GIF\")}>MP4 to GIF</Link>\n      <Link className=\"nav-item\" to=\"/mp3\" onClick={(e) => setSite(\"MP4 to MP3\")}>MP4 to MP3</Link>\n      <Link className=\"nav-item\" to=\"/mp4\" onClick={(e) => setSite(\"Edit MP4\")}>Edit MP4</Link>\n    </div>\n\n      <h1>{site}</h1>\n\n      <label for=\"file-upload\" class=\"custom-file-upload\">\n      Upload file\n      </label>\n      <input id=\"file-upload\" type=\"file\" onChange={(e) => setVideo(e.target.files?.item(0))} />\n\n      { video && \n      <>\n        <br />\n        <video\n          controls\n          width=\"350\"\n          src={URL.createObjectURL(video)}>\n        </video>\n\n          <div id=\"clip-length-div\">\n            <h3>Clip length (seconds)</h3>\n\n            <label for=\"startInput\" class=\"time-label\">Start:</label>\n            <input id=\"startInput\" type=\"text\" onChange={(e) => setStart(e.target.value)}/>\n\n            <label for=\"endInput\" class=\"time-label\">End:</label>\n            <input id=\"endInput\" type=\"text\" onChange={(e) => setEnd(e.target.value)}/>        \n          </div>\n      \n      <div>            \n\n        <Switch>\n          <Route path=\"/\" exact>\n            <button className=\"button-convert\" onClick={convertToGif}>Convert to GIF</button>\n\n            { gif && <div id=\"gif-container\"><img alt=\"Output gif\" src={gif} width=\"350\" />\n\n              <div>\n                  <a id=\"gif-download\" href={gif} download=\"file\">Save File</a>\n                  <CopyToClipboard text={gif}>\n                    <button>Copy to clipboard</button>\n                  </CopyToClipboard>\n                </div>\n              </div>}\n          </Route>\n\n          <Route path=\"/mp3\" exact>\n            <button className=\"button-convert\" onClick={convertToMp3}>Convert to MP3</button>\n\n            { mp3 && <div id=\"mp3-container\"><audio controls=\"controls\" src={mp3} type=\"audio/mp3\" />\n\n              <div>\n                <a id=\"gif-download\" href={mp3} download=\"file\">Save File</a>\n                <CopyToClipboard text={mp3}>\n                  <button>Copy to clipboard</button>\n                </CopyToClipboard>\n              </div>\n              </div>} \n          </Route>\n\n          <Route path=\"/mp4\" exact>\n          <div id=\"speedButtons-div\">\n            <h3>Clip speed: {audioSpeed}</h3>\n              <button className=\"speedButtons\" type=\"text\" onClick={(e) => setAudioSpeed(\"0.5\") + setVideoSpeed(\"1.5\")}>0.5x</button>\n              <button className=\"speedButtons\" type=\"text\" onClick={(e) => setAudioSpeed(\"1\") + setVideoSpeed(\"1\")}>1x</button>\n              <button className=\"speedButtons\" type=\"text\" onClick={(e) => setAudioSpeed(\"1.5\") + setVideoSpeed(\"0.75\")}>1.5x</button>\n              <button className=\"speedButtons\" type=\"text\" onClick={(e) => setAudioSpeed(\"2\") + setVideoSpeed(\"0.5\")}>2x</button>\n          </div>\n            <button className=\"button-convert\" onClick={convertToMp4}>Convert to MP4</button>\n              \n            { mp4 && <div id=\"mp4-container\"><video controls=\"controls\" src={mp4} type=\"video/mp4\" width=\"350\" />\n\n              <div>\n                <a id=\"mp4-download\" href={mp4} download=\"file\">Save File</a>\n                <CopyToClipboard text={mp4}>\n                  <button>Copy to clipboard</button>\n                </CopyToClipboard>\n              </div>\n              </div>} \n          </Route>\n\n         </Switch>\n        {loading && <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={60000}\n    />}\n    </div>\n  </>}\n  </Router>\n</div>\n  \n  )\n    :\n    (\n      <>\n      <div id=\"initiateScreen\">\n      <h1>Initializing application</h1>\n      <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n    </div>\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}